# Python package Pipeline
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

variables:
  - group: job_auth

trigger:
  - master
  - pr
  - refs/tags/v*

jobs:
- job: Test
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      pip install pycodestyle
      pycodestyle --show-source --show-pep8 tests/ example/ conway/
    displayName: 'pycodestyle'

  - script: |
      pip install pydocstyle
      pydocstyle conway/
    displayName: 'pydocstyle'

  - script: |
      pip install pytest pytest-cov pytest-azurepipelines
      pytest --doctest-modules --junitxml=junit/test-results.xml --cov=conway --cov-report=xml --cov-report=html
    displayName: 'pytest'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: 'Publish PyTest Results'
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'

  - task: PublishCodeCoverageResults@1
    condition: succeededOrFailed()
    displayName: 'Publish Code Coverage Results'  
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      
  - script: |
      bash <(curl -s https://codecov.io/bash) -t $(codecov.token)
    displayName: 'Publish Coverage Results to Codecov.io'
    condition: and(succeededOrFailed(), eq(variables['Python.Version'], '3.7'))
    

#Build Module Resources
- job: Build
  condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'refs/tags/'))
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      python3 -m pip install --user --upgrade setuptools wheel
      python3 setup.py sdist bdist_wheel
    displayName: 'Build Module distribution files'

  - task: CopyFiles@2
    displayName: 'Copy Module Distribution Files'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/dist'
      contents: '*'
      targetFolder: '$(Build.ArtifactStagingDirectory)/dist'

  # GitHub Release
  - task: GitHubRelease@1
    displayName: 'Create GitHub Release'      
    inputs:
      gitHubConnection: 'bsatrom-conway'
      repositoryName: 'bsatrom/py-conway'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'gitTag'
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'commitBased'
      assets: '$(Build.ArtifactStagingDirectory)/dist/*'

  - script: |
      python3 -m pip install --user --upgrade twine
      python3 -m twine upload --skip-existing dist/*
    displayName: "Upload Package to PyPi"
    condition: succeeded()
    env:
      TWINE_USERNAME: $(twine.username)
      TWINE_PASSWORD: $(twine.password)
      TWINE_REPOSITORY_URL: "https://upload.pypi.org/legacy/"